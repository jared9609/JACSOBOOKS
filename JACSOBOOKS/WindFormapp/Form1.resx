<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        G4G4G4G4G4G4G4G4G4G4IAAAAAAD/9k=
</value>
  </data>
</root>